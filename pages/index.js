import { useState, useEffect } from "react";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { Formik, Field, ErrorMessage, Form } from "formik";
import * as Yup from "yup";
import * as _ from "lodash";

export default function Home() {
  const loginSchema = Yup.object().shape({
    email: Yup.string().email().required("Email is required"),
    password: Yup.string()
      .required("Password is required")
      .min(3, "Your password too short"),
  });

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className="w-full max-w-sm mx-auto mt-32">
          <h1 className="text-3xl font-bold text-sky-400/100 mb-5 text-center">
            Sign in!
          </h1>
          <Formik
            initialValues={{
              email: "",
              password: "",
            }}
            onSubmit={(values) => {
              console.log(values);
            }}
            validationSchema={loginSchema}
          >
            {({ errors, touched }) => (
              <Form className="flex flex-initial flex-col justify-center">
                <div className="md:flex flex-col mb-6">
                  <label
                    className="block text-gray-500 font-bold mb-1 md:mb-0 pr-4"
                    htmlFor="email"
                  >
                    Email
                  </label>
                  <Field
                    id="email"
                    name="email"
                    type="email"
                    className={`bg-gray-200 appearance-none border-2 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-sky-300 ${
                      errors.email && touched.email
                        ? "border-red-400"
                        : "border-gray-200"
                    }`}
                  />
                  <ErrorMessage
                    component={"a"}
                    name="email"
                    className="text-red-600 p-2 bg-red-100 my-3 rounded-md"
                  />
                </div>
                <div className="md:flex flex-col mb-6">
                  <label
                    className="block text-gray-500 font-bold mb-1 md:mb-0 pr-4"
                    htmlFor="password"
                  >
                    Password
                  </label>
                  <Field
                    id="password"
                    name="password"
                    type="password"
                    className={`bg-gray-200 appearance-none border-2 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-sky-300 ${
                      errors.password && touched.password
                        ? "border-red-400"
                        : "border-gray-200"
                    }`}
                  />
                  <ErrorMessage
                    component={"a"}
                    name="password"
                    className="text-red-600 p-2 bg-red-100 my-3 rounded-md"
                  />
                </div>
                <div className="flex justify-center">
                  <button
                    type="submit"
                    className="p-3 border font-bold rounded-lg shadow bg-sky-500 hover:bg-sky-500/70 text-white w-full"
                  >
                    Sign in
                  </button>
                </div>
              </Form>
            )}
          </Formik>
        </div>
      </main>
    </div>
  );
}
